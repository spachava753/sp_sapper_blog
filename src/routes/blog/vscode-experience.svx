---
title: VS Code - The editor that could?
date: 2020-01-16T19:24:20.170Z
link: 'vscode-experience'
abstract: A lot of people know about Atom, and its extensions that are able to be installed via its package manger apm. The fact that it is so customizable, yet does not take up the same amount of resources as an IDE makes it the perfect editor to use and personalize. As for me, although I dabbled in Atom, I didn’t really customize it too much, nor did I install...
---

# VS Code vs. Atom
At some point in time, you may have heard of VS Code, or Visual Studio Code, as an open source competitor for Atom, backed by Microsoft. I recently came across it and decided to give it a try.

## Why not Atom
A lot of people know about Atom, and its extensions that are able to be installed via its package manger apm. The fact that it is so customizable, yet does not take up the same amount of resources as an IDE makes it the perfect editor to use and personalize. As for me, although I dabbled in Atom, I didn’t really customize it too much, nor did I install a lot of packages. However, as I started noticing the amount of resources, especially my RAM, that IDEs can take up, I started to look for text editors that I could use when I wasn’t programming , one that I could simply use to edit the rest of my files in my projects, such as markdown files. Then I discovered VS Code.

## Why VS Code specifically
For some reason, I always had problems with Atom. It was either that it was too slow for me, or had errors on startup that slowed down my productivity to a snail’s pace. In the end, I just gave up on it. However, once I started using VS Code, I could see why people were so into it. It was fast, clean, and highly customizable. You were able to customize your editor with ease, whether simply installing plugins from the marketplace, or customizing your settings for your user. What surprised me was that this editor could become pretty close to a real IDE, with autocomplete and intellisense. I love using VS Code for programming languages like Python, and writing markdown files. In fact, all of my blog posts is done in VS Code. A big bonus to the fact that I could start working right out of the box, without needing to configure anything.

# My Experience
## What do I use it for
I use VS Code for a number of things, including maintaining and editing my blog. I edit my markdown files as well as do Python programming on VS Code. Any front end development is also done in VS Code. I mainly use it when I don’t want to wait for an IDE to load up, and want to do some simple changes to a file.

## Quirks
There is very little to dislike about VS Code. However, if I had to choose, I would say that the way open a workspace could be done easier, as well as renaming a workspace. Everything else works without a hitch and is very intuitive.

## Bonuses
There a liitle features that add up to make the whole experiece pleasant and a breeze during work. I like the fact that there is section dedicated to open editors on the side panel, and also there is a single keyboard shortcut in which you could search for commands. Just press control+shift+p, and it will show you every command you’ll ever need. It is very similar to the spotlight feature that are in Macs, but for VS Code.

# Conclusion
I encourage you to try VS Code. It has great support, plugins galore, and very easy to modify the settings, whether for each user or globally. It has plenty of themes for you to play around with, and it is very minimal. Once you pick up VS Code, you won’t let it go.